(function(s,r){typeof exports=="object"&&typeof module!="undefined"?r(exports):typeof define=="function"&&define.amd?define(["exports"],r):(s=typeof globalThis!="undefined"?globalThis:s||self,r(s.index={}))})(this,function(s){"use strict";var r=(e=>(e.Fever="F",e.Healthy="H",e.Diabetes="D",e.Tuberculosis="T",e.Dead="X",e))(r||{}),o=(e=>(e.Aspirin="As",e.Antibiotic="An",e.Insulin="I",e.Paracetamol="P",e))(o||{}),b=(e=>(e.ParacetamolAndAspirin="Death",e.AntibioticAndInsulin="FeverForHealthy",e.Aspirin="CuresFever",e.Antibiotic="CuresTuberculosis",e.Insulin="PreventsDiabeticDeath",e.Paracetamol="AlsoCuresFever",e))(b||{});const f=class{constructor(e){this.hasStateChanged=new Set,this.patientStates=e,this.drugsAdministered=[]}determineInteraction(e){const t={AsP:"Death",AnI:"FeverForHealthy",As:"CuresFever",An:"CuresTuberculosis",I:"PreventsDiabeticDeath",P:"AlsoCuresFever"},i=e.sort((a,u)=>a.localeCompare(u)).join("");return t[i]||null}setDrugs(e){this.drugsAdministered=e}wait40Days(){const e=this.determineInteraction(this.drugsAdministered),t={...this.patientStates};if(e==="Death"){const n=Object.values(t).reduce((i,a)=>i+a,0);t.X+=n,Object.keys(t).forEach(i=>{i!=="X"&&(t[i]=0)}),this.patientStates=t;return}for(const n in this.patientStates){const i=this.patientStates[n];switch(e){case"FeverForHealthy":n==="H"&&(t.F+=i,t[n]=0),n==="T"&&(t.H+=i,t[n]=0);break;case"CuresTuberculosis":n==="T"&&(t.H+=i,t[n]=0);break;case"CuresFever":case"AlsoCuresFever":n==="F"&&(t.H+=i,t[n]=0);break;case"PreventsDiabeticDeath":break;default:this.drugsAdministered.length&&console.warn(`${f.UNKNOWN_DRUG}: ${this.drugsAdministered.join(", ")}`);break}n==="D"&&!this.drugsAdministered.includes("I")&&(t.X+=i,t[n]=0)}this.patientStates=t}report(){return this.patientStates}};let c=f;c.UNKNOWN_DRUG="Interaction for this drug/combination is not implemented";const A={[r.Fever]:"Fever",[r.Healthy]:"Healthy",[r.Diabetes]:"Diabetes",[r.Tuberculosis]:"Tuberculosis",[r.Dead]:"Dead"},m={[o.Aspirin]:"Aspirin",[o.Antibiotic]:"Antibiotic",[o.Insulin]:"Insulin",[o.Paracetamol]:"Paracetamol"};function l(e,t){return e=Math.ceil(e),t=Math.floor(t),Math.floor(Math.random()*(t-e+1))+e}const d=Object.values(o),g=Object.values(r).filter(e=>e!==r.Dead),v=0,D=3;function F({min:e,max:t}){const n=e&&e>0?e:v,i=t&&t>0?t:D;return g.flatMap(a=>new Array(l(n,i)).fill(a)).join(",")}function p(){const e=new c({});let t=null,n=null;do{const i=l(1,d.length),a=[];for(let u=0;u<i;u++){const h=l(0,d.length-1);a.push(d[h])}t=a.sort((u,h)=>u.localeCompare(h)).join(","),n=e.determineInteraction(a)}while(n===null);return t}s.Drug=o,s.DrugFullName=m,s.DrugInteractions=b,s.PatientState=r,s.PatientStateFullName=A,s.Quarantine=c,s.generateDrugs=p,s.generatePatientsStatus=F,s.getRandomInt=l,Object.defineProperties(s,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
